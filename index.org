#+SETUPFILE: org-theme/setup/long.setup

#+AUTHOR: Manoel Vilela, Lucas Vieira
#+DATE: <2018-02-10 Sat>
#+TITLE: Common Lisp Brasil


Grupo oficial do Telegram: [[https://telegram.me/commonlispbr][Common Lisp Brasil]]

Grupo não-oficial de Lisp Brasileiro IRC freenode: [[http://webchat.freenode.net/][#lisp-br]]

Os dados a seguir podem estar incompletos ou conter erros. Proceda com cuidado e, se você tiver uma sugestão ou reclamação, [[https://github.com/commonlispbr/commonlispbr.github.io][abra uma
issue no repositório desta página]].

* Conceitos e Fundamentos
** O que é Lisp?

Dialetos Lisp [fn:1]  têm uma sintaxe singular simplificada para denotar, listas e
símbolos, que podem ou não estarem associados a valores e/ou
procedimentos. Na linguagens da família Lisp, há a peculiaridade de
existir uma linha muito tênue de separação entre dados e procedimentos
no código-fonte. Na realidade, é possível produzir código a partir de
dados e vice-versa! Uma das características fortes da linguagem é o
uso da [[https://pt.wikipedia.org/wiki/Nota%25C3%25A7%25C3%25A3o_polonesa][notação polonesa]] onde simplifica a sintaxe da linguagem de uma
maneira sem acrescentar ambiguidades: operações e operandos são
denotados de forma explícita em sua ordem de precedência no uso de
listas.

#+BEGIN_SRC lisp

(operacao operando1 operand2)
(+ 1 2) ;; => 3

#+END_SRC

Esta família de linguagens foi desenhada para abstrair a complexidade
do hardware de um computador, criando uma interface para que um humano
possa se comunicar de maneira expressiva com a máquina. O primeiro
Lisp denotado historicamente por [[https://pt.wikipedia.org/wiki/Lisp][LISP]] foi criado por [[https://pt.wikipedia.org/wiki/John_McCarthy][John McCarthy]] em
1958 nos laboratórios do MIT, USA.

[fn:1] Lisp é uma abreviação de **LISt Processing**, processamento de listas.

** O que é Common Lisp?

Common Lisp é um dialeto multi-paradigma da linguagem de programação
Lisp. Suporta programação procedural, orientação a
objetos e o paradigma funcional, algo comum a todos os
Lisps, por sua próxima relação com a natureza do Cálculo Lambda.

Foi criada por Guy L. Steele nos anos 80, com o intuito de combinar
aspectos de diversos dialetos anteriores, incluindo Scheme. Em 1994
foi publicada no padrão [[http://cvberry.com/tech_writings/notes/common_lisp_standard_draft.html][ANSI Information Technology - Programming
Language - Common Lisp, registro X3.226-1994 (R1999)]]. Common Lisp é
bem maior e semanticamente mais complexa que um dialeto como Scheme,
uma vez que foi projetada para ser uma linguagem comercial e ser
compatível com os diversos outros dialetos Lisp dos quais derivou.

#+BEGIN_SRC lisp

  (defun hello-world () ;; definição de função
    (princ "Hello, Lispers!"))

  (hello-world) ;; chamada de função

  ;; resultado: Hello, Lispers!
#+END_SRC

* Links de Aprendizado sobre Common Lisp
** Apresentação

- [[http://lisp-lang.org/][Site oficial de Common Lisp]], apresentação sobre a linguagem e seu poder.
- [[https://github.com/CodyReichert/awesome-cl][Awesome-CL]], uma lista imensa sobre frameworks e ferramentas para
  Common Lisp.
- [[http://www.lisperati.com/casting.html][Lisperati Casting]], uma história em quadrinhos sobre a magia que é
  programar em Lisp.

** Documentação e tutoriais

- [[http://bnmcgn.github.io/lisp-guide/lisp-exploration.html][Common Lisp REPL Exploration Guide]], um guia interessantíssimo sobre
  a exploração de Common Lisp pelo REPL [fn:2].
- [[https://lispcookbook.github.io/cl-cookbook/][Cookbook de Common Lisp]]. Também inclui tutoriais sobre Quicklisp (veja a seção de Tooling).
- [[http://www.lispworks.com/documentation/HyperSpec/Front/][Common Lisp Hyperspec]]
  Sua primeira parada ao pesquisar por documentação de Common Lisp. [[http://clhs.lisp.se/][(Mirror)]]
- [[https://www.cliki.net/][CLiki, a Wiki de Common Lisp]]

[fn:2] REPL significa Read-Eval-Print-Loop, muito comum em linguagens
interativas como Lisp e Python. A propósito, o conceito foi
inicialmente feito justamente em Lisp!

** Livros

- Common Lisp: A Gentle Introduction to Symbolic Computation, por David S. Touretsky
  - [Amazon] [[https://www.amazon.com.br/Common-LISP-Introduction-Computation-Engineering-ebook/dp/B00IZUEG1G/][Livro físico]]
  - [[https://www.cs.cmu.edu/~dst/LispBook/][Versão online]]
- [Amazon] [[https://www.amazon.com.br/Land-Lisp-Learn-Program-Game-ebook/dp/B004AE3P4K/][Land of Lisp: Learn to Program in Lisp, One Game at a Time!]], por Conrad Barski
- [Amazon] [[https://www.amazon.com.br/Common-Lisp-Recipes-Problem-Solution-Approach-ebook/dp/B01JFTONBS/][Common Lisp Recipes: A Problem-Solution Approach]], por Edmund Weitz
- Practical Common Lisp, por Peter Seibel
  - [Amazon] [[https://www.amazon.com.br/Practical-Common-Lisp-Peter-Seibel/dp/1590592395][Livro físico]]
  - [[http://www.gigamonkeys.com/book/][Versão online]]

* Tooling

** Emacs

Emacs é o melhor editor de texto em consenso para se programar em
Common Lisp.

- [Inglês] [[https://www.gnu.org/software/emacs/][Site oficial]]
- [Inglês] [[https://github.com/bbatsov/prelude][Prelude]] uma configuração com baterias pro Emacs para bons hábitos
- [Inglês] Mini-manual do Emacs, por [[https://github.com/tuhdo][tuhdo]]
  - [[http://tuhdo.github.io/emacs-tutor.html][Parte 1: O Básico]]
  - [[http://tuhdo.github.io/emacs-tutor2.html][Parte 2: Por que parênteses importam]]
  - [[http://tuhdo.github.io/emacs-tutor3.html][Parte 3: Customizando e extendendo o Emacs]]

** Portacle

Portacle é um reempacotamento de Emacs. Diferente do programa original,
Portacle é uma edição voltada para programadores Common Lisp. Este editor
já inclui o SBCL (implementação de Common Lisp), Quicklisp (para gerenciar
projetos e pacotes), e Magit (para lidar com versionamento de código em
Git). Enquanto recomendamos instalar o Emacs e aprender a configurá-lo,
esta é também uma excelente ferramenta para iniciantes que queiram um
ambiente Common Lisp que funcione logo de cara, ou mesmo para lispeiros
experientes que queiram um ambiente CL que possam carregar no pendrive,
e que funcione em quase qualquer sistema operacional.

- [Inglês] [[https://portacle.github.io/][Link oficial do Portacle]]
- [Inglês] [[https://github.com/portacle/portacle][Repositório oficial]]

** SLIME

SLIME significa /SUPERIOR LISP INTERACTION MODE for EMACS/. É uma
das coisas mais fascinante que se faz Common Lisp uma linguagem tão
produtiva e o Emacs ser seu editor ideal.

- [Inglês] [[https://astraybi.wordpress.com/2015/08/02/how-to-install-slimesbclquicklisp-into-emacs/][Instalando SLIME + SBCL + Quicklisp no Emacs]], por Astray_BI
- [Inglês] [[https://github.com/quicklisp/quicklisp-slime-helper][Repositório do =quicklisp-slime-helper=]]

  Este pacote torna mais fácil a instalação do SLIME, a partir do
  Quicklisp.

** Compiladores

- [Inglês] [[http://sbcl.org/][SBCL]]: Steel Bank Common Lisp (recomendado)
- [Inglês] [[https://common-lisp.net/project/ecl/][ECL]]: Embedabble Common Lisp
- [Inglês] [[https://clisp.sourceforge.io/][GNU CLISP]] (obsoleto desde 2010, artefato histórico)
- [Inglês] [[https://ccl.clozure.com/][CCL]]: Clozure Common Lisp ([[https://clojure.org/][Clojure]] é outra coisa, não confunda!)

** Quicklisp

Quicklisp é o gerenciador de pacote (sistemas nos jargões de CL),
muito útil para integrar sua aplicação usando pacotes de terceiro.

- [Inglês] [[https://www.quicklisp.org/beta/][Site oficial do Quicklisp]]
- [Inglês] [[https://www.xach.com/lisp/quickproject/][Quickproject: crie o esqueleto de um projeto de Common Lisp]]

  Este tutorial é extremamente útil para a criação de projetos
  compatíveis com Quicklisp.

** Roswell

Roswell é descrito como ser o instalador de lisp e launcher para
o ambiente em geral de Common Lisp que simplesmente funciona.
Tenta automatizar a instalação dos compiladores, pacotes do emacs
e criação de binários com Common Lisp. Vale a pena tentar dar uma
olhada!

- [[https://github.com/roswell/roswell][Roswell]]
  
* Projetos

- [[https://next-browser.github.io/][=nEXT=, um browser escrito em Common Lisp orientado a teclado Emacs-like
  usando WebKit]]
- [[https://github.com/adolenc/cl-neovim][=cl-neovim=, cliente de Common Lisp para Neovim]]
- [[https://github.com/ryukinix/lisp-inference][=lisp-inference=, um motor de inferência baseado em Cálculo Proposicional, escrito em Common Lisp]]
- [[https://github.com/ryukinix/lisp-chat][=lisp-chat=, um chat minimalista e experimental, escrito em Common Lisp]]
- [[https://github.com/lispgames/lispgames.github.io/wiki/Common-Lisp][=lispgames=, comunidade internacional de referência sobre desenvolvimento de jogos com Lisp, assim como Common Lisp]]
- [[https://github.com/froggey/Mezzano][Mezzano, um sistema operacional feito em Common Lisp]] ([[https://github.com/froggey/MBuild][Link para o build system]])
- [[https://github.com/luksamuk/opengames][Repositório de pequenos jogos com código aberto]].Neste repositório, foram feitos, em Common Lisp, os mini-jogos =cl-2048=, =cl-snake= e =dagarden=.
- [[http://xzpeter.org/starwar/][=starwar=, um jogo feito em Common Lisp usando SDL]] ([[https://github.com/xzpeter/starwar][Repositório]])
  ([[https://github.com/commonlispbr/starwar][Fork da nossa comunidade]])
- [[https://github.com/azzamsa/awesome-cl-software][Awesome-CL-software]], uma lista sobre aplicações feitas em Common Lisp!
- [[https://github.com/aimacode/aima-lisp][Implementação em Common Lisp dos algoritmos do livro /Artificial Intelligence - A Modern Approach/, de Russell e Norvig]]
- [[https://github.com/norvig/paip-lisp][Implementação em Common Lisp dos algoritmos do livro /Paradigms of Artificial Intelligente Programming/, de Norvig]]
- [[https://github.com/kingcons/coleslaw][=coleslaw=, software em Common Lisp para escrever seu próprio blog estático]], similar a Frog, Jekyll e Hakyll.

* Apêndice: Referências amplas

- [Inglês] Build Your Own Lisp, por Daniel Holder
  - [Amazon] [[https://www.amazon.com.br/Build-Your-Own-Lisp-English-ebook/dp/B00ONV8CNO/][Livro físico]]
  - [[http://www.buildyourownlisp.com/][Versão online]]
- [[https://github.com/luksamuk/YASWEG][YASWEG (Yet Another Static Website Generator), sintaxe para geração de websites estáticos]], escrito em Guile Scheme.
- [Youtube/Inglês] [[https://www.youtube.com/watch?v=cMxbSsRntv4][Transcrição regravada da mini-palestra de Alan Turing]]
  Originalmente difundida na rádio BBC de Londres, em 15 de maio de 1951. Leitura por James Grime.
- [[http://lerax.me/lisp-bookmarks/][Lista de links relacionados a Lisp e/ou à cultura cyberpunk em geral]]
  É provável que alguns destes links acabem integrados a esta lista.
- [Inglês] [[http://hyperpolyglot.org/lisp][Comparativo entre os dialetos Common Lisp, Racket, Clojure e Emacs Lisp]]
- [Inglês] [[http://borretti.me/article/common-lisp-sotu-2015][Estado do Ecossistema de Common Lisp (2015)]]
- [Youtube/Inglês] [[https://www.youtube.com/playlist?list=PLBgJcoaU2hl-JnoVOzjYB5qk_PfYjPm-I][Playlist: Série Process Hacking]]
